const nodemailer = require("nodemailer");
const logs = require('../models/log.js');
const loggerManager = new logs();
const transporter = nodemailer.createTransport({
    host: 'smtp.gmail.com',
    port: 465,
    auth: {
        user: process.env.GMAILID,
        pass: process.env.GMAILPASS
    }
});

async function sendVerificationEmail(to, token) {
    let info = await transporter.sendMail({
        from: process.env.GMAILID,
        to: to,
        subject: "–ü–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –∏–ºe–π–ª –∞–¥—Ä–µ—Å",
        html: `
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;700&family=Ubuntu:wght@300&display=swap" rel="stylesheet">
        <h1 style="margin-left: 5%;">–ó–¥—Ä–∞–≤–µ–π—Ç–µ üëã!</h1> 
        <br> 
        <p style="font-size: 20px; margin-left: 10%; margin-right: 10%;">–†–∞–¥–≤–∞–º–µ —Å–µ, —á–µ —Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞—Ö—Ç–µ &#128151 –Ω–∞ –Ω–∞—à–∏—è —Å–∞–π—Ç! –ó–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ø—ä–ª–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç–∏ –Ω–∞ –Ω–∞—à–∞—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, 
        –º–æ–ª—è –ø–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ –í–∞—à–∏—è –∏–º–µ–π–ª, –Ω–∞—Ç–∏—Å–∫–∞–π–∫–∏ —Å–∏–Ω–∏—è –±—É—Ç–æ–Ω–∞ –¥–æ–ª—É ü¢É.</p> 
        <br>
        <img src="https://cdn.discordapp.com/attachments/834872582661603440/858667540648951839/dancing_fish.gif" height="400px" style="margin-left:32%;"><br>
        <a href="http://localhost:4000/api/verify/${token}"><button style="margin-left: 40%; margin-top: 3%; height:50px; width:20%; background-color: #12b0df; color:white; border-radius:200px; border: none; cursor: pointer; font-size: 20px;">–ü–æ—Ç–≤—ä—Ä–∂–¥–∞–≤–∞–Ω–µ</button></a>
        <br><br><h2 style="margin-left: 10%;">–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º!</h4> <br><br>
        <a href="https://chupacabra.codes" style="text-decoration: none; font-size: 15px; color: #0b7dbd;"><p>–û–±—Ä–∞—Ç–Ω–æ –≤ —Å–∞–π—Ç–∞ ‚Æå<span>üîó</span> </p></a> 
        `
    });

    transporter.sendMail(info, (error, info) => {
        if (error) {
            return loggerManager.logError(error);
        }
        loggerManager.logInfo(`Email was sent to the user with email: ${to} ` + info.response);
    });
}

async function sendForgotPassEmail(to, token) {
    let info = await transporter.sendMail({
        from: process.env.GMAILID,
        to: to,
        subject: "–ó–∞–±—Ä–∞–≤–µ–Ω–∞ –ø–∞—Ä–æ–ª–∞",
        html: `
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;700&family=Ubuntu:wght@300&display=swap" rel="stylesheet">
        <h1 style="margin-left: 5%;">–ó–¥—Ä–∞–≤–µ–π—Ç–µ üëã!</h1>
        <br>
        <p style="font-size: 20px; margin-left: 10%; margin-right: 10%;">–ò–∑–≥–ª–µ–∂–¥–∞, —á–µ —Å—Ç–µ —Å–∏ –∑–∞–±—Ä–∞–≤–∏–ª–∏ –≤–∞—à–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –∑–∞ –Ω–∞—à–∏—è —Å–∞–π—Ç. –ó–∞ –¥–∞ –º–æ–∂–µ –¥–∞ —è —Å–º–µ–Ω–∏—Ç–µ –º–æ–ª—è, –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ —Å–∏–Ω–∏—è –±—É—Ç–æ–Ω –ø–æ-–¥–æ–ª—É ü¢É.</p>
        <br>
        <img src="https://raw.githubusercontent.com/idiliev18/chupacabra/master/client/src/pages/img/fish%20party.gif" height="400px" style="margin-left:32%;"><br>
        <a href="http://localhost:4000/api/resetPassword/${token}"><button style="margin-left: 40%; margin-top: 3%; height:50px; width:20%; background-color: #12b0df; color:white; border-radius:200px; border: none; cursor: pointer; font-size: 20px;">–°–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞</button></a>
        <br><br>
        <p style="margin-left: 10%;">–ê–∫–æ –Ω–µ –í–∏–µ —Å—Ç–µ –∏–∑–ø—Ä–∞—Ç–∏–ª–∏ –º–æ–ª–±–∞—Ça –∑–∞ —Å–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞, –º–æ–∂–µ –¥–∞ –∏–≥–Ω–æ—Ä–∏—Ä–∞—Ç–µ —Ç–æ–∑–∏ –∏–º–µ–π–ª!</p> <br><br>
        <a href="https://chupacabra.codes" style="text-decoration: none; font-size: 15px; color: #0b7dbd;">
        <p>–û–±—Ä–∞—Ç–Ω–æ –≤ —Å–∞–π—Ç–∞ ‚Æå<span>üîó</span> </p>
        </a>
        `
    });

    transporter.sendMail(info, (error, info) => {
        if (error) {
            return loggerManager.logError(error);
        }
        loggerManager.logInfo(`Email was sent to the user with email: ${to} ` + info.response);
    });

}

module.exports.sendVerificationEmail = sendVerificationEmail;
module.exports.sendForgotPassEmail = sendForgotPassEmail;